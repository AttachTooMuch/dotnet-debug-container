name: Docker Image CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  create:
    tags: ["*"] # This will run the workflow on tag creation

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write # This gives read and write access to repository contents
      actions: read # This gives read access to actions and artifacts
      packages: write # This gives read and write access to packages

    steps:
      - uses: actions/checkout@v4

      - name: Determine branch or tag name
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            TAG_OR_BRANCH_NAME=$(echo "${GITHUB_REF}" | sed 's/refs\/heads\///')
            IS_TAG="false"
            DOCKER_VERSION="${TAG_OR_BRANCH_NAME}_${GITHUB_RUN_NUMBER}"
            DOCKER_REPO="${{ vars.DOCKER_USERNAME }}/debugcontainers-dev"
          else
            TAG_OR_BRANCH_NAME=$(echo "${GITHUB_REF}" | sed 's/refs\/tags\///')
            IS_TAG="true"
            DOCKER_VERSION="${TAG_OR_BRANCH_NAME}"
            DOCKER_REPO="${{ vars.DOCKER_USERNAME }}/debugcontainers"
          fi
          echo "TAG_OR_BRANCH_NAME=${TAG_OR_BRANCH_NAME}" >> $GITHUB_ENV
          echo "IS_TAG=${IS_TAG}" >> $GITHUB_ENV
          echo "DOCKER_VERSION=${DOCKER_VERSION}" >> $GITHUB_ENV
          echo "DOCKER_REPO=${DOCKER_REPO}" >> $GITHUB_ENV
          echo "INSTALL_DIR=${GITHUB_WORKSPACE}/debug-container/vsdbg" >> $GITHUB_ENV
          echo "DOWNLOAD_DIR=${GITHUB_WORKSPACE}/downloads" >> $GITHUB_ENV

      - name: Print GitHub environment variables
        run: |
          echo "INSTALL_DIR": ${{ env.INSTALL_DIR }}
          echo "DOWNLOAD_DIR": ${{ env.DOWNLOAD_DIR }}
          echo "DockerVersion": ${{ env.DOCKER_VERSION }}
          echo "DockerRepo": ${{ env.DOCKER_REPO }}
          echo "TagOrBranch": ${{ env.TAG_OR_BRANCH_NAME }}
          echo "Is Tag": ${{ env.IS_TAG }}
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Run ID: $GITHUB_RUN_ID"
          echo "Run Number: $GITHUB_RUN_NUMBER"
          echo "Job ID: $GITHUB_JOB"
          echo "Action: $GITHUB_ACTION"
          echo "Actor: $GITHUB_ACTOR"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Event Name: $GITHUB_EVENT_NAME"
          echo "Event Path: $GITHUB_EVENT_PATH"
          echo "Workspace: $GITHUB_WORKSPACE"
          echo "SHA: $GITHUB_SHA"
          echo "Ref: $GITHUB_REF"
          echo "Head Ref: $GITHUB_HEAD_REF"
          echo "Base Ref: $GITHUB_BASE_REF"

      - name: Create directories
        run: |
          mkdir -p ${{ env.INSTALL_DIR }}
          mkdir -p ${{ env.DOWNLOAD_DIR }}

      - name: Download and Extract vsdbg
        run: |
          curl -sSL -o ${{ env.DOWNLOAD_DIR }}/vsdbg.tar.gz https://vsdebugger.azureedge.net/vsdbg-17-11-10506-2/vsdbg-linux-x64.tar.gz &&
          tar -xzf ${{ env.DOWNLOAD_DIR }}/vsdbg.tar.gz -C ${{ env.INSTALL_DIR }} &&
          ls -l ${{ env.INSTALL_DIR }}

      - name: ls and pwd
        run: |
          cd ./debug-container &&
          pwd &&
          ls -la

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build the Docker image
        run: |
          cd ./debug-container &&

          docker build \
            --build-arg DOTNET_VERSION=aspnetcore-runtime-6.0 \
            --file ./Dockerfile.base.ubuntu.22.04.amd64 \
            --tag ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet6.0-${{ env.DOCKER_VERSION }} . &&
          docker build \
            --build-arg DOTNET_VERSION=aspnetcore-runtime-7.0 \
            --file ./Dockerfile.base.ubuntu.22.04.amd64 \
            --tag ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet7.0-${{ env.DOCKER_VERSION }} . &&
          docker build \
            --build-arg DOTNET_VERSION=aspnetcore-runtime-8.0 \
            --file ./Dockerfile.base.ubuntu.22.04.amd64 \
            --tag ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet8.0-${{ env.DOCKER_VERSION }} .

          docker tag ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet6.0-${{ env.DOCKER_VERSION }} ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet6.0-latest &&
          docker tag ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet7.0-${{ env.DOCKER_VERSION }} ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet7.0-latest &&
          docker tag ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet8.0-${{ env.DOCKER_VERSION }} ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet8.0-latest &&
          
      - name: List images
        run: docker images

      - name: push Docker image (development)
        run: |
          docker push ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet6.0-${{ env.DOCKER_VERSION }} &&
          docker push ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet7.0-${{ env.DOCKER_VERSION }} &&
          docker push ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet8.0-${{ env.DOCKER_VERSION }} &&
          docker push ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet6.0-latest &&
          docker push ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet7.0-latest &&
          docker push ${{ env.DOCKER_REPO }}:ubuntu-22.04-amd64-aspnet8.0-latest
